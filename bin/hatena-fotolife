#!/usr/bin/env node

var commander = require('commander-b');
var fotolife = require('hatena-fotolife-api');
var path = require('path');

var newClient = function() {
  return fotolife({
    type: 'wsse',
    username: process.env.HATENA_USERNAME,
    apikey: process.env.HATENA_APIKEY
  });
};

var getVersion = function() {
  var packageJsonPath = path.resolve(__dirname, './../package.json');
  var packageJson = require(packageJsonPath);
  return packageJson.version
};

var formatEntry = function(e) {
  var title = e.title._;
  var url = e.link.filter(function(l) {
    return l.$.rel === 'alternate';
  })[0].$.href;
  // 'http://f.st-hatena.com/images/fotolife/b/bouzuya/20140920/20140920003331.gif?1411140816'
  // => 'http://img.f.hatena.ne.jp/images/fotolife/b/bouzuya/20140920/20140920003331.gif'
  var url = require('url');
  var parsed = url.parse(urlString);
  parsed.host = 'img.f.hatena.ne.jp';
  parsed.search = '';
  var formatted = url.format(parsed);
  return [
    'title: ' + title,
    'url: ' + url,
    'imageurl: ' + formatted
  ].join('\n');
};

var command = commander()
var program = command.version(getVersion());

program
.command('upload <file>', 'upload a photo')
.option('-t, --title <title>', 'title')
.action(function(file, options) {
  var client = newClient();
  var params = { file: file };
  if (options.title) {
    params.title = options.title;
  }
  return client.create(params).then(function(res) {
    console.log(formatEntry(res.entry));
  }, function(err) {
    console.error(err);
  });
});

program
.command('list', 'list uploaded photos')
.action(function() {
  var client = newClient();
  return client.index().then(function(res) {
    console.log(res.feed.entry.map(formatEntry).join('\n'));
  }, function(err) {
    reject(err);
  });
});

program
.command('update <id>', 'view a photo info')
.option('-t, --title <title>', 'title')
.action(function(id, options) {
  if (!options.title) {
    var msg = 'title is required';
    console.error(msg);
    return reject(new Error(msg));
  }
  var client = newClient();
  return client.update({
    id: id,
    title: options.title
  }).then(null, function(err) {
    console.error(err);
  });
});

program
.command('info <id>', 'view a photo info')
.action(function(id) {
  var client = newClient();
  return client.show({
    id: id
  }).then(function(res) {
    console.log(formatEntry(res.entry));
  }, function(err) {
    console.error(err);
  });
});

program
.command('delete <id>', 'delete a photo')
.action(function(id) {
  var client = newClient();
  return client.destroy({
    id: id
  }).then(null, function(err) {
    console.error(err);
  });
});

program.execute();
